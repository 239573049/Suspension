@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Main).Assembly" >
        <Found Context="routeData">
            <AuthorizeView>
                <Authorized>
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                </Authorized>
                <NotAuthorized>
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(EmptyLayout)"/>
                </NotAuthorized>
            </AuthorizeView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code {

    protected override async Task OnInitializedAsync()
    {
        var result = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (!result.User.Claims.Any())
        {
            NavigationManager.NavigateTo("/pages/login");
        }
    }

}